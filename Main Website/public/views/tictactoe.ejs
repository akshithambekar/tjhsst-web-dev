<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style type="text/css">
        h1 {
            text-align: center;
        }
        h2 {
            text-align: center;
        }
        h4 {
            text-align: center;
        }

        .svg-wrapper {
            background-color: #F0F8FF;
            width: 250px;
            margin: auto;
        }
    </style>
    <h1>Tic-Tac-Toe</h1>
    <h4>Created by Akshith Ambekar</h4>
</head>

<body>
    <div class="svg-wrapper">
        <svg id="gameBoard" viewBox="0 0 90 90" xmlns="http://www.w3.org/2000/svg">
            <circle id="o_00" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(10, 10)"
                style="opacity: 0; fill-opacity: 0" />
            <line id="x_001" x1="6" y1="6" x2="24" y2="24" style="stroke:#000; opacity: 0;" />
            <line id="x_002" x1="24" y1="6" x2="6" y2="24" style="stroke:#000; opacity: 0;" />
            <rect id="b_00" width="30" height="30" style="fill-opacity: 0.1;" />
            <circle id="o_01" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(40, 10)"
                style="opacity: 0;" />
            <line id="x_011" x1="36" y1="6" x2="54" y2="24" style="stroke:#000; opacity: 0;" />
            <line id="x_012" x1="54" y1="6" x2="36" y2="24" style="stroke:#000; opacity: 0;" />
            <rect id="b_01" width="30" height="30" style="fill-opacity: 0.2;" transform="translate(30,0)" />
            <circle id="o_02" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(70, 10)"
                style="opacity: 0;" />
            <line id="x_021" x1="66" y1="6" x2="84" y2="24" style="stroke:#000; opacity: 0;" />
            <line id="x_022" x1="84" y1="6" x2="66" y2="24" style="stroke:#000; opacity: 0;" />
            <rect id="b_02" width="30" height="30" style="fill-opacity: 0.1;" transform="translate(60,0)" />
            <circle id="o_03" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(10, 40)"
                style="opacity: 0;" />
            <line id="x_031" x1="6" y1="36" x2="24" y2="54" style="stroke:#000; opacity: 0;" />
            <line id="x_032" x1="24" y1="36" x2="6" y2="54" style="stroke:#000; opacity: 0;" />
            <rect id="b_03" width="30" height="30" style="fill-opacity: 0.2;" transform="translate(0,30)" />
            <circle id="o_04" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(40, 40)"
                style="opacity: 0;" />
            <line id="x_041" x1="36" y1="36" x2="54" y2="54" style="stroke:#000; opacity: 0;" />
            <line id="x_042" x1="54" y1="36" x2="36" y2="54" style="stroke:#000; opacity: 0;" />
            <rect id="b_04" width="30" height="30" style="fill-opacity: 0.1;" transform="translate(30,30)" />
            <circle id="o_05" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(70, 40)"
                style="opacity: 0;" />
            <line id="x_051" x1="66" y1="36" x2="84" y2="54" style="stroke:#000; opacity: 0;" />
            <line id="x_052" x1="84" y1="36" x2="66" y2="54" style="stroke:#000; opacity: 0;" />
            <rect id="b_05" width="30" height="30" style="fill-opacity: 0.2;" transform="translate(60,30)" />
            <circle id="o_06" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(10, 70)"
                style="opacity: 0;" />
            <line id="x_061" x1="6" y1="66" x2="24" y2="84" style="stroke:#000; opacity: 0;" />
            <line id="x_062" x1="24" y1="66" x2="6" y2="84" style="stroke:#000; opacity: 0;" />
            <rect id="b_06" width="30" height="30" style="fill-opacity: 0.1;" transform="translate(0,60)" />
            <circle id="o_07" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(40, 70)"
                style="opacity: 0;" />
            <line id="x_071" x1="36" y1="66" x2="54" y2="84" style="stroke:#000; opacity: 0;" />
            <line id="x_072" x1="54" y1="66" x2="36" y2="84" style="stroke:#000; opacity: 0;" />
            <rect id="b_07" width="30" height="30" style="fill-opacity: 0.2;" transform="translate(30,60)" />
            <circle id="o_08" cx="5" cy="5" r="10" fill="#d3d3d3" stroke="#030" transform="translate(70, 70)"
                style="opacity: 0;" />
            <line id="x_081" x1="66" y1="66" x2="84" y2="84" style="stroke:#000; opacity: 0;" />
            <line id="x_082" x1="84" y1="66" x2="66" y2="84" style="stroke:#000; opacity: 0;" />
            <rect id="b_08" width="30" height="30" style="fill-opacity: 0.1;" transform="translate(60,60)" />
        </svg>
    </div>
    <h2 id='status'>X's turn</h2>
    <script>
        let gameState = {
            board: ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
            turn: 'x',
            winner: null,
            isStarted: false,
            isWon: false,
            message: 'Click to start'
        }
        function gameOver() {
            periods = 0
            for (var i = 0; i < gameState.board.length; i++) {
                if (gameState.board[i] == '.') {
                    periods += 1
                }
            }
            if (gameState.board[0] == gameState.board[3] && gameState.board[3] == gameState.board[6] && gameState.board[0] != '.') {
                console.log(`Game is over, winner is ${gameState.board[0]}`)
                return gameState.board[0]
            } else if (gameState.board[1] == gameState.board[4] && gameState.board[4] == gameState.board[7] && gameState.board[1] != '.') {
                console.log(`Game is over, winner is ${gameState.board[1]}`)
                return gameState.board[1]
            } else if (gameState.board[2] == gameState.board[5] && gameState.board[5] == gameState.board[8] && gameState.board[2] != '.') {
                console.log(`Game is over, winner is ${gameState.board[2]}`)
                return gameState.board[2]
            } else if (gameState.board[0] == gameState.board[1] && gameState.board[1] == gameState.board[2] && gameState.board[0] != '.') {
                console.log(`Game is over, winner is ${gameState.board[0]}`)
                return gameState.board[0]
            } else if (gameState.board[3] == gameState.board[4] && gameState.board[4] == gameState.board[5] && gameState.board[3] != '.') {
                console.log(`Game is over, winner is ${gameState.board[3]}`)
                return gameState.board[3]
            } else if (gameState.board[6] == gameState.board[7] && gameState.board[7] == gameState.board[8] && gameState.board[6] != '.') {
                console.log(`Game is over, winner is ${gameState.board[6]}`)
                return gameState.board[6]
            } else if (gameState.board[0] == gameState.board[4] && gameState.board[4] == gameState.board[8] && gameState.board[0] != '.') {
                console.log(`Game is over, winner is ${gameState.board[0]}`)
                return gameState.board[0]
            } else if (gameState.board[2] == gameState.board[4] && gameState.board[4] == gameState.board[6] && gameState.board[2] != '.') {
                console.log(`Game is over, winner is ${gameState.board[2]}`)
                return gameState.board[2]
            } else if (periods == 0) {
                console.log(`Draw`)
                return 'Draw'
            } else {
                return false
            }
        }

        function currentPlayer() {
            oCount = 0
            xCount = 0
            state = gameState.board
            for (var i = 0; i < gameState.board.length; i++) {
                if (gameState.board[i] == 'O') {
                    oCount += 1
                }
                if (gameState.board[i] == 'X') {
                    xCount += 1
                }
            }
            if (xCount == oCount) {
                return 'X'
            } else if (xCount > oCount) {
                return 'O'
            }
        }

        function gameStarted() {
            periods = 0
            for (var i = 0; i < gameState.board.length; i++) {
                if (gameState.board[i] == '.') {
                    periods += 1
                }
            }
            if (periods != 9) {
                return true
            } else {
                return false
            }
        }

        function eventToPosition(ev) {
            console.log(ev)
            var pos = ev.target.id
            playTurn(rectToPos(pos))
        }

        function rectToPos(rec) {
            if (rec == 'b_00') {
                return 0
            } else if (rec == 'b_01') {
                return 1
            } else if (rec == 'b_02') {
                return 2
            } else if (rec == 'b_03') {
                return 3
            } else if (rec == 'b_04') {
                return 4
            } else if (rec == 'b_05') {
                return 5
            } else if (rec == 'b_06') {
                return 6
            } else if (rec == 'b_07') {
                return 7
            } else if (rec == 'b_08') {
                return 8
            } else if (rec == 'b_09') {
                return 9
            } else { return false }
        }

        function playTurn(pos) {
            player = currentPlayer()
            if (gameState.board[pos] == '.') {
                gameState.board[pos] = player
                console.log(`Player ${player} made a move at position ${pos}`)
                if (player == 'X') {
                    temp1 = document.querySelector(`#x_0${pos}1`)
                    temp1.setAttributeNS(null, 'style', 'opacity: 1')
                    temp1.setAttributeNS(null, 'style', 'stroke: #000')
                    temp2 = document.querySelector(`#x_0${pos}2`)
                    temp2.setAttributeNS(null, 'style', 'opacity: 1')
                    temp2.setAttributeNS(null, 'style', 'stroke: #000')
                }
                else if (player == 'O') {
                    temp = document.querySelector(`#o_0${pos}`)
                    temp.setAttributeNS(null, 'style', 'opacity: 1')
                }
                if (gameOver() != false) {
                    if (gameOver() == 'X') {
                        let temp = document.querySelector('#status')
                        temp.innerText = 'X wins!'
                    }
                    else if (gameOver() == 'O') {
                        let temp = document.querySelector('#status')
                        temp.innerText = 'O wins!'
                    }
                    else if (gameOver() == 'Draw') {
                        let temp = document.querySelector('#status')
                        temp.innerText = 'Draw!'
                    }
                    slot0.removeEventListener('click', eventToPosition)
                    slot1.removeEventListener('click', eventToPosition)
                    slot2.removeEventListener('click', eventToPosition)
                    slot3.removeEventListener('click', eventToPosition)
                    slot4.removeEventListener('click', eventToPosition)
                    slot5.removeEventListener('click', eventToPosition)
                    slot6.removeEventListener('click', eventToPosition)
                    slot7.removeEventListener('click', eventToPosition)
                    slot8.removeEventListener('click', eventToPosition)
                } else {
                    if (player == 'X') {
                        let temp = document.querySelector('#status')
                        temp.innerText = `O's turn`
                    }
                    else if (player == 'O') {
                        let temp = document.querySelector('#status')
                        temp.innerText = `X's turn`
                    }
                }
            }
        }

        let slot0 = document.querySelector('#b_00')
        slot0.addEventListener('click', eventToPosition)
        let slot1 = document.querySelector('#b_01')
        slot1.addEventListener('click', eventToPosition)
        let slot2 = document.querySelector('#b_02')
        slot2.addEventListener('click', eventToPosition)
        let slot3 = document.querySelector('#b_03')
        slot3.addEventListener('click', eventToPosition)
        let slot4 = document.querySelector('#b_04')
        slot4.addEventListener('click', eventToPosition)
        let slot5 = document.querySelector('#b_05')
        slot5.addEventListener('click', eventToPosition)
        let slot6 = document.querySelector('#b_06')
        slot6.addEventListener('click', eventToPosition)
        let slot7 = document.querySelector('#b_07')
        slot7.addEventListener('click', eventToPosition)
        let slot8 = document.querySelector('#b_08')
        slot8.addEventListener('click', eventToPosition)
    </script>
</body>

</html>